def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY');
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}
apply plugin: 'com.google.gms.google-services'

android {
    signingConfigs {
        debug {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    compileSdkVersion 28
    defaultConfig {
        if (buildAsApplication) {
            applicationId "com.turbulent.chewman"
        }
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 71
        versionName "1.0.4"
        externalNativeBuild {
            ndkBuild {
                arguments "APP_PLATFORM=android-24"
                abiFilters 'armeabi-v7a', 'arm64-v8a' //, 'x86', 'x86_64'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            ndkBuild {
                path 'jni/Android.mk'
            }
        }
       
    }
    sourceSets {
        main {
            //jniLibs.srcDirs += ['/home/darth/Software/mobilestudio-linux/graphics_analyzer/target/android/arm/unrooted/']
            //jniLibs.srcDirs += ['/home/darth/work/Android/SDK/ndk-bundle/sources/third_party/vulkan/src/build-android/jniLibs']
        }
    }
    lintOptions {
        abortOnError false
    }

    if (buildAsLibrary) {
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith(".aar")) {
                    def fileName = "com.turbulent.chewman.aar";
                    output.outputFile = new File(outputFile.parent, fileName);
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.google.android.gms:play-services-games:19.0.0"
    implementation "com.google.android.gms:play-services-auth:17.0.0"
    implementation 'com.google.android.gms:play-services-ads:18.3.0'
    implementation 'com.android.billingclient:billing:2.1.0'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'
}